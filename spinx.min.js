class SpinXAnnouncement extends HTMLElement{data;constructor(){super(),this.attachShadow({mode:"open"}),this.countDownId="spinx-count-down",this.messageItemClass="announcement-item"}connectedCallback(){this.render(),this.dispatchEvent(new CustomEvent("onLoadedAnnouncement",{bubbles:!0,composed:!0}))}render(){this.data=JSON.parse(this.dataset.json),this.data.scheduledAt&&"string"==typeof this.data.scheduledAt&&(this.data.scheduledAt=new Date(this.data.scheduledAt)),this.data.launchedAt&&"string"==typeof this.data.launchedAt&&(this.data.launchedAt=new Date(this.data.launchedAt)),this.data.closedAt&&"string"==typeof this.data.closedAt&&(this.data.closedAt=new Date(this.data.closedAt));var t,n=[];if("upcoming_event"===this.data.spinState?.state)if(this.data.countDownToLaunch?.enabled&&this.data.countDownToLaunch.content&&this.data.countDownToLaunch.displayHours&&lessThanSpinXHours(this.data.launchedAt,new Date,this.data.countDownToLaunch.displayHours)){let e=()=>(this.data.launchedAt.getTime()-(new Date).getTime())/1e3;setInterval(()=>{var t=this.shadowRoot.getElementById(this.countDownId);t&&(t.innerHTML=this.data.countDownToLaunch.content.replace(/{{TIME}}/g,convertSpinXCountDownTime(e())))},1e3),n.push(`<p class="${this.messageItemClass}" id="${this.countDownId}">${this.data.countDownToLaunch.content.replace(/{{TIME}}/g,convertSpinXCountDownTime(e()))}</p>`)}else this.data.upcomingEvent?.enabled&&this.data.upcomingEvent.content&&this.data.upcomingEvent.displayDays&&lessThanSpinXDays(this.data.launchedAt,new Date,this.data.upcomingEvent.displayDays)&&n.push(`<p class="${this.messageItemClass}">${this.data.upcomingEvent.content.replace(/{{TIME}}/g,formatSpinXDateTime(this.data.launchedAt))}</p>`);else if(["ready_to_spin","use_winning_prizes","get_spin_by_ordering","ready_to_spin_again"].includes(this.data.spinState?.state))if(this.data.countDownToClose?.enabled&&this.data.countDownToClose.content&&this.data.countDownToClose.displayHours&&lessThanSpinXHours(this.data.closedAt,new Date,this.data.countDownToClose.displayHours)){let e=()=>(this.data.closedAt.getTime()-(new Date).getTime())/1e3;setInterval(()=>{var t=this.shadowRoot.getElementById(this.countDownId);t&&(t.innerHTML=this.data.countDownToClose.content.replace(/{{TIME}}/g,convertSpinXCountDownTime(e())))},1e3),n.push(`<p class="${this.messageItemClass}" id="${this.countDownId}">${this.data.countDownToClose.content.replace(/{{TIME}}/g,convertSpinXCountDownTime(e()))}</p>`)}else"ready_to_spin"===this.data.spinState?.state?this.data.readyToSpin?.enabled&&this.data.readyToSpin.content&&(t=`<img class="spinx-icon-announcement" src="${this.data.spinState.spinIcon}" />`,n.push(`<p class="${this.messageItemClass}">${this.data.readyToSpin.content.replace(/{{SPIN}}/g,t)}</p>`)):"use_winning_prizes"===this.data.spinState?.state?this.data.useWinningPrizes?.enabled&&this.data.useWinningPrizes.content&&n.push(`<p class="${this.messageItemClass}">${this.data.useWinningPrizes.content.replace(/{{CODE}}/g,this.data.spinState?.productCode)}</p>`):"get_spin_by_ordering"===this.data.spinState?.state?this.data.getSpinByOrdering?.enabled&&(this.data.getSpinByOrdering.orderAmountRestriction?.enabled?this.data.getSpinByOrdering.orderAmountRestriction.content&&this.data.getSpinByOrdering.orderAmountRestriction.amount?.value&&this.data.getSpinByOrdering.orderAmountRestriction.amount?.currency&&(t=convertSpinXCurrency(this.data.getSpinByOrdering.orderAmountRestriction.amount.value,this.data.getSpinByOrdering.orderAmountRestriction.amount.currency),n.push(`<p class="${this.messageItemClass}">${this.data.getSpinByOrdering.orderAmountRestriction.content.replace(/{{AMOUNT}}/g,t)}</p>`)):this.data.getSpinByOrdering.content&&n.push(`<p class="${this.messageItemClass}">${this.data.getSpinByOrdering.content}</p>`)):"ready_to_spin_again"===this.data.spinState?.state&&this.data.readyToSpinAgain?.enabled&&this.data.readyToSpinAgain.content&&(t=`<img class="spinx-icon-announcement" src="${this.data.readyToSpinAgain.spinIcon}" />`,n.push(`<p class="${this.messageItemClass}">${this.data.readyToSpinAgain.content.replace(/{{SPIN}}/g,t)}</p>`));let e="",i=(n.forEach(t=>{e+=t}),"");n.forEach((t,e)=>{i+=`.spinx-announcement-container .${this.messageItemClass}:nth-child(${e+1}) { animation-delay: ${3*e}s; } `}),this.shadowRoot.innerHTML=`
      <style>
        :host {
          position: sticky;
          bottom: 0;
          z-index: 1000;
        }

        .spinx-announcement-container {
          opacity: 0;
          transition: opacity 0.5s linear;
          background-color: ${this.data?.backgroundColor.customized?this.data.backgroundColor.value:"#fdc73b"};
          color: ${this.data?.contentColor.customized?this.data.contentColor.value:"#121212"};
          font-family: Helvetica, 'Helvetica Neue', Arial, 'Lucida Grande', sans-serif;
          font-weight: 400;
          letter-spacing: 0.06rem;
          line-height: 1.8;
          text-align: center;
          width: 100%;
          font-size: 14px;
          display: none;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          overflow: hidden;
          position: relative;
        }

        .spinx-announcement-container .${this.messageItemClass} {
          padding: 5px 0px;
          position: absolute;
          width: 100%;
          ${1<n.length?`opacity: 0; animation: slideUp ${3*n.length}s infinite;`:"opacity: 1; transform: translateY(0%);"}
        }

        .spinx-icon-announcement {
          width: 22px;
          height: 22px;
          position: relative;
          top: 5px;
        }

        @keyframes slideUp {
          0% {
            transform: translateY(100%);
            opacity: 0;
          }
          10% {
            transform: translateY(0%);
            opacity: 1;
          }
          45% {
            transform: translateY(0%);
            opacity: 1;
          }
          55% {
            transform: translateY(-100%);
            opacity: 0;
          }
          100% {
            transform: translateY(-100%);
            opacity: 0;
          }
        }

        ${i}
      </style>

      <div class="spinx-announcement-container" style="display: none">
        ${e}
      </div>

      <style>
        ${this.data.styleContent}
      </style>
    `,this.announcementContainer=this.shadowRoot.querySelector(".spinx-announcement-container"),setTimeout(()=>{this.announcementContainer.style.opacity=1},10),this.resetContainerHeight(),this.show()}show(){this.announcementContainer.style.display="flex","function"==typeof spinx?.customScripts?.onShowAnnouncement&&spinx.customScripts.onShowAnnouncement()}hide(){this.announcementContainer.style.display="none","function"==typeof spinx?.customScripts?.onShowAnnouncement&&spinx.customScripts.onHideAnnouncement()}resetContainerHeight(){setTimeout(()=>{var t=this.shadowRoot.querySelectorAll("."+this.messageItemClass);let e=0;t.forEach(t=>{t.offsetHeight>e&&(e=t.offsetHeight)}),this.announcementContainer.style.height=e+"px"},0)}}customElements.define("spinx-announcement",SpinXAnnouncement);class SpinXOpener extends HTMLElement{data;constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.dispatchEvent(new CustomEvent("onLoadedOpener",{bubbles:!0,composed:!0}))}render(){this.data=JSON.parse(this.dataset.json);let t=this.data?.backgroundColor?this.data.backgroundColor:"#2097df";var e=this.data?.contentColor?this.data.contentColor:"#fff";this.shadowRoot.innerHTML=`
      <style>
        @keyframes rotateIn {
          0% {
            transform: rotate(0deg);
          }
          100% {
            opacity: 1;
            transform: rotate(2880deg);
          }
        }

        @keyframes borderDisplay {
          0% {
            border-color: transparent;
            // box-shadow: 0px transparent;
          }
          100% {
            border-color: ${t};
            // box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);
          }
        }

        @keyframes contentDisplay {
          0% {
            transform: scaleX(0);
          }
          100% {
            transform: scaleX(1);
          }
        }

        .opener-button-container {
          position: fixed;
          z-index: 1001;
          bottom: ${this.data?.distance?.bottom?this.data.distance.bottom:"60px"};
          ${"left"===this.data?.position?`left: ${this.data.distance.left||"25px"};`:`right: ${this.data.distance.right||"25px"};`}
          font-family: Helvetica, 'Helvetica Neue', Arial, 'Lucida Grande', sans-serif;
        }

        .opener-button-container[data-direction="right"] .opener-text {
          right: 70%;
        }
        .opener-button-container[data-direction="left"] .opener-text {
          left: 70%;
        }

        .opener-button {
          width: 52px;
          height: 52px;
          position: relative;
          z-index: 1003;
          border-radius: 50%;
          overflow: hidden;
          border: 2px solid transparent;
          background-color: #fff;
          cursor: pointer;
          // box-shadow: 0px 4px 8px transparent;
          transition: transform 0.1s ease, box-shadow 0.2s ease-out, border-color 1s ease-out;
          animation: rotateIn 1.2s forwards ease, borderDisplay 0.5s forwards ease-out 0.4s;
          opacity: 0;
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 0;
        }

        .opener-button img {
          width: 100%;
          height: 100%;
          object-fit: cover;
        }

        .opener-button:hover {
          box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.4) !important;
          transform: scale(1.05) !important;
        }

        .opener-button:active {
          transform: scale(0.95) !important;
          box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        }

        .opener-text {
          position: absolute;
          z-index: 1002;
          bottom: 4px;
          ${"left"===this.data?.position?"border-radius: 0px 8px 8px 0px;":"border-radius: 8px 0px 0px 8px;"}
          line-height: 1;
          padding: 8px 0px;
          font-size: 16px;
          font-weight: 600;
          line-height: 1.8;
          letter-spacing: 0.06rem;
          text-transform: uppercase;
          color: ${e};
          background-color: ${t};
          box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
          white-space: nowrap;
          // opacity: 0;
          width: auto;
          transform: scaleX(0);
          transform-origin: ${this.data?.position};
          transition: 0.3s all ease;
          pointer-events: none;
        }

        .opener-text span {
            ${"left"===this.data?.position?"padding: 0px 20px 0px 24px;":"padding: 0px 24px 0px 20px;"}
        }

        @media only screen and (max-width: 600px) {
          .opener-text {
            display: none !important;
            animation: none;
          }
        }
      </style>

      <div class="opener-button-container" id="opener-button-container" data-direction="${this.data?.position}" style="display: none;">
        <div class="opener-text" id="opener-text"><span>${this.data?.content?this.data.content:"Spin Now"}</span></div>
        <button class="opener-button" id="opener-button">
          <img src="${spinx?.opener?.icon}" alt="${this.data?.content?this.data.content:"Spin Now"}" />
        </button>
      </div>
    `,this.openerContainer=this.shadowRoot.getElementById("opener-button-container"),this.openerButton=this.shadowRoot.getElementById("opener-button"),this.openerText=this.shadowRoot.getElementById("opener-text"),this.data?.attentionEffect.enabled?(this.openerButton.style.animation="rotateIn 2s forwards ease, borderDisplay 0.5s forwards ease-out 0.8s",this.openerText.style.animation="contentDisplay 0.8s forwards ease-out 1.2s",setInterval(()=>{this.openerButton.style.animation="none",this.openerButton.style.opacity=1,this.openerButton.style.borderColor=t,setTimeout(()=>this.openerButton.style.animation="rotateIn 2s forwards ease",100)},1e3*this.data?.attentionEffect.intervalTime)):(this.openerButton.style.opacity=1,this.openerButton.style.borderColor=t,this.openerText.style.transform="scaleX(1)"),this.openerButton.addEventListener("click",()=>this.click()),this.show()}show(){this.openerContainer.style.display="block","function"==typeof spinx?.customScripts?.onShowOpener&&spinx.customScripts.onShowOpener()}hide(){this.openerContainer.style.display="none","function"==typeof spinx?.customScripts?.onShowOpener&&spinx.customScripts.onHideOpener()}click(){var t=document.getElementsByTagName("spinx-popup")[0];t&&(t.isOpened?t.close():t.open())}}customElements.define("spinx-opener",SpinXOpener);class SpinXPopup extends HTMLElement{data;constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.dispatchEvent(new CustomEvent("onLoadedPopup",{bubbles:!0,composed:!0}))}render(){this.data=JSON.parse(this.dataset.json),this.shadowRoot.innerHTML=`
      <style>
        .popup-overlay {
          position: fixed;
          top: 0;
          left: 0;
          width: 100vw;
          height: 100vh;
          background: #fff;
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
          overflow-y: auto;
          display: flex;
          justify-content: center;
          align-items: center;
          z-index: 1004;
          transform: translateX(-100%);
          transition: transform 0.3s ease;
        }

        // .popup-overlay.fullscreen {
        //   width: 100%;
        // }

        // .popup-overlay.halfscreen {
        //   width: 60%;
        // }

        .popup-overlay.fullscreen.active {
          transform: translateX(0);
        }

        .popup-overlay.active {
          transform: translateX(-33%);
        }

        .popup-content {
          background: #fff;
          width: 100%;
          height: 100%;
          // max-width: 600px;
          border-radius: 8px;
          display: flex;
          flex-direction: column;
          align-items: center;
          position: relative;
          text-align: center;
        }

        .close-button {
          position: absolute;
          top: 10px;
          right: 10px;
          padding: 5px 15px;
          font-size: 32px;
          font-weight: bold;
          background: none;
          border: none;
          cursor: pointer;
          transition: transform 0.3s ease;
        }

        .close-button:hover {
          transform: rotate(90deg);
        }

        .popup-body {
          display: flex;
          flex-direction: row;
          width: 100%;
          height: 100%;
          // gap: 20px;
          align-items: center;
          justify-content: center;
          text-align: center;
          background-color: ${this.data.backgroundColor};
          ${this.data.backgroundImage?`background-image: url(${this.data.backgroundImage});`:""}
        }

        .space-column {
          flex: 0.5;
        }

        .popup-overlay.fullscreen .space-column {
          display: none;
        }

        .spin-column {
          flex: 1;
          padding: 0px;
          width: 100%;
        }

        .popup-overlay.fullscreen .spin-column {
          padding: 120px;
        }

        .info-column {
          flex: 1;
          padding: 20px 80px 20px 40px;
        }

        @media (max-width: 1024px) and (orientation: portrait) {
          .popup-body {
            flex-direction: column;
            padding-top: 60px;
            ${this.data.mobileBackgroundImage?`background-image: url(${this.data.mobileBackgroundImage});`:""}
          }

          .popup-overlay.active {
            transform: translateX(0);
          }

          .space-column {
            display: none;
          }

          .spin-column {
            width: 60%;
          }
        }

        @media (max-width: 430px) and (orientation: portrait) {
          .popup-body {
            padding-top: 20px;
          }

          .spin-column {
            width: 90%;
          }
        }

        @media (max-width: 375px) and (orientation: portrait) {
          .popup-body {
            padding-top: 40px;
          }
        }

        @media (max-width: 1366px) and (orientation: landscape) {
          .spin-column {
            flex: 1.5;
          }
        }

        @media (max-width: 1024px) and (orientation: landscape) {
          .spin-column {
            flex: 1.8;
            padding: 0px;
          }
        }

        @media (max-width: 932px) and (orientation: landscape) {
          .spin-column {
            padding: 60px;
          }
        }

        @media (max-width: 740px) and (orientation: landscape) {
          .spin-column {
            padding: 20px;
          }
        }

        @media (max-width: 667px) and (orientation: landscape) {
          .spin-column {
            padding: 0px;
          }
        }
      </style>

      <div class="popup-overlay" id="popup-overlay">
        <div class="popup-content">
          <button class="close-button">&times;</button>
          <div class="popup-body">
            <div class="space-column"></div>
            <div class="spin-column"></div>
            <div class="info-column"></div>
          </div>
        </div>
      </div>
    `,this.shadowRoot.querySelector(".close-button").addEventListener("click",()=>this.close())}get isOpened(){return this.shadowRoot.getElementById("popup-overlay").classList.contains("active")}setSpinContent(t){this.shadowRoot.querySelector(".spin-column").replaceChildren(t)}setFormContent(t){this.shadowRoot.querySelector(".info-column").replaceChildren(t)}open(t=this.data.usePopupFullScreen){var e=this.shadowRoot.getElementById("popup-overlay");e.classList.remove("fullscreen","halfscreen"),e.classList.add(t?"fullscreen":"halfscreen"),e.classList.add("active")}close(){this.shadowRoot.getElementById("popup-overlay").classList.remove("active")}}customElements.define("spinx-popup",SpinXPopup);class SpinXWheel extends HTMLElement{data;constructor(){super(),this.attachShadow({mode:"open"}),this.init()}connectedCallback(){this.render(),this.dispatchEvent(new CustomEvent("onLoadedWheel",{bubbles:!0,composed:!0}))}init(){this.width=this.getAttribute("width")||800,this.height=this.getAttribute("height")||800,this.stickerAngle=45,this.angleOffset=0,this.isSpinning=!1,this.isSpinningClass="is-spinning",this.tickerAnim,this.currentSlice=0}render(){this.data=JSON.parse(this.dataset.json),this.prizeAngle=this.data.prizes?.length?360/this.data.prizes?.length:0,this.shadowRoot.innerHTML=`
      <style>
        :host {
          display: flex;
          align-items: center;
          justify-content: center;
          width: 100%;
          height: 100%;
        }

        #container {
          width: 100%;
          aspect-ratio: 1 / 1;
          position: relative;
        }

        canvas {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
        }

        .ticker {
          position: absolute;
          width: 8%; /* Tăng chiều rộng của mũi tên */
          // height: auto;
          // top: 55px;
          // right: 37px;
          top: 10.2%;
          right: 6.4%;
          transform: translate(0, 0) rotate(${this.stickerAngle}deg); /* Xoay mũi tên để trỏ vào vòng quay */
          transform-origin: 50% 0%; /* Đặt gốc xoay của mũi tên */
          pointer-events: none;
        }

        .ticker-svg {
          fill: black; /* Màu nền mũi tên */
          stroke: yellow; /* Màu viền mũi tên */
          stroke-width: 2;
        }

        .${this.isSpinningClass} .ticker {
          animation: tick 0.7s cubic-bezier(0.34, 1.56, 0.64, 1);
        }

        @keyframes tick {
          40% {
            transform: translate(0, 0) rotate(30deg);
          }
        }

        @media only screen and (max-width: 600px) {
          #container {
            width: 85%;
          }

          .ticker {
            width: 10%; /* Tăng chiều rộng của mũi tên */
            top: 9.5%;
            right: 4.2%;
          }
        }
      </style>

      <div id="container"></div>
    `,this.container=this.shadowRoot.getElementById("container"),this.wheel=document.createElement("canvas"),this.wheel.classList.add("wheel"),this.wheel.width=this.width,this.wheel.height=this.height,this.renderWheelCanvas(),this.data.circleCenter?.displayed?(this.circle=document.createElement("canvas"),this.circle.classList.add("circle"),this.circle.width=this.width,this.circle.height=this.height,this.renderCircleCanvas()):this.circle=null,this.ticker=document.createElement("div"),this.ticker.classList.add("ticker"),this.ticker.innerHTML=`
      <svg viewBox="0 0 300 300" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fill-rule="evenodd" clip-rule="evenodd" d="${"standard"===this.data.sticker?.borderType?"M249.021 176.878L248.941 177.077C243.469 190.758 230.702 220.22 214.067 246.427C205.764 259.507 196.231 272.207 185.848 281.748C175.629 291.137 163.336 298.611 149.656 298.611C136.1 298.611 123.888 291.483 113.663 282.329C103.308 273.057 93.8229 260.673 85.5485 247.79C68.9756 221.986 56.1877 192.478 50.3017 176.897C16.8118 88.2474 69.3156 1.00049 149.656 1.00049C188.662 1.00049 222.904 19.2152 242.61 50.959C262.299 82.6746 266.69 126.54 249.092 176.675L249.021 176.878ZM149.656 288.611C109.656 288.611 71.1394 203.759 59.6564 173.363C27.9749 89.5005 78.0846 11.0005 149.656 11.0005C221.228 11.0005 273.306 77.5005 239.656 173.363C228.903 200.246 189.656 288.611 149.656 288.611Z":""}" fill="${"standard"===this.data.sticker?.borderType&&this.data.sticker.borderColor?this.data.sticker.borderColor:"#77003C"}"/>
        <path d="M59.6561 173.363C71.1391 203.759 109.656 288.611 149.656 288.611C189.656 288.611 228.903 200.246 239.656 173.363C273.305 77.5005 221.228 11.0005 149.656 11.0005C78.0843 11.0005 27.9747 89.5005 59.6561 173.363Z" fill="${this.data.sticker?.backgroundColor||"#FE3198"}"/>
        <path d="M59.6561 173.363C71.1391 203.759 109.656 288.611 149.656 288.611C189.656 288.611 228.903 200.246 239.656 173.363C273.305 77.5005 221.228 11.0005 149.656 11.0005C78.0843 11.0005 27.9747 89.5005 59.6561 173.363Z" fill="url(#paint0_linear_1905_570)" fill-opacity="0.2"/>
        <defs>
          <linearGradient id="paint0_linear_1905_570" x1="150.045" y1="11.0005" x2="150.045" y2="288.611" gradientUnits="userSpaceOnUse">
            <stop offset="0.349094" stop-color="#FFE9F4"/>
            <stop offset="0.696231" stop-color="#030001"/>
          </linearGradient>
        </defs>
      </svg>
    `,this.container.append(this.wheel,this.circle,this.ticker)}darkenHex(t,e){t=parseInt(t.slice(1),16);return"#"+(Math.max(0,(t>>16)-e)<<16|Math.max(0,(t>>8&255)-e)<<8|Math.max(0,(255&t)-e)).toString(16).padStart(6,"0")}renderWheelCanvas(){let n=this.wheel.getContext("2d"),i=this.width/2,a=2*Math.PI/(this.data.prizes?.length||0);n.clearRect(0,0,this.width,this.height),"standard"===this.data.borderAround?.type&&(n.beginPath(),n.arc(i,i,i-10,0,2*Math.PI),n.lineWidth=10,n.strokeStyle=this.data.borderAround.color||"#FFFFFF",n.stroke()),this.data.prizes?.forEach((t,e)=>{"auto_darken"===this.data.borderAround?.type&&(n.beginPath(),n.moveTo(i,i),n.arc(i,i,i,a*e+this.angleOffset,a*(e+1)+this.angleOffset),n.closePath(),n.fillStyle=this.darkenHex(t.config.backgroundColor,20),n.fill()),n.beginPath(),n.moveTo(i,i),n.arc(i,i,i-13,a*e+this.angleOffset,a*(e+1)+this.angleOffset),n.closePath(),n.fillStyle=t.config.backgroundColor,n.fill(),this.data.prizeBorder?.displayed&&(n.strokeStyle=this.data.prizeBorder.color,n.lineWidth=2,n.stroke()),n.save(),n.translate(i,i),n.rotate(a*e+a/2+this.angleOffset),n.textAlign="center",n.fillStyle=t.config.contentColor||"#ffffff",n.font=`bold ${t.config.fontSize||"32px"} `+(t.config.fontFamily||"Arial"),n.fillText(t.name,i/1.4,10),n.restore()}),this.wheel.style.transform="rotate(0deg)",this.wheel.style.transition="transform 15s cubic-bezier(0.20, 0.1, 0.20, 1)",this.wheel.addEventListener("transitionend",this.onTransitionend.bind(this))}renderCircleCanvas(){var t=this.circle.getContext("2d"),e=this.width/2;t.clearRect(0,0,this.width,this.height),t.beginPath(),t.arc(e,e,e/6,0,2*Math.PI),t.fillStyle=this.data.circleCenter?.backgroundColor||"#FFD700",t.fill(),"standard"===this.data.circleCenter?.borderType&&(t.lineWidth=5,t.strokeStyle=this.data.circleCenter.borderColor||"#FFFFFF",t.stroke())}spin(e){if(!this.isSpinning){this.isSpinning=!0,this.dispatchEvent(new CustomEvent("onStartSpin",{bubbles:!0,composed:!0})),this.container.classList.add(this.isSpinningClass),this.ticker.style.animation="none",this.runTickerAnimation();var n=e*this.prizeAngle,e=(e+1)*this.prizeAngle;let t=Math.round(Math.random()*(e-n)+n);0!==t&&t%this.prizeAngle!=0||t--;e=3600-t-this.stickerAngle;this.wheel.style.transform=`rotate(${e}deg)`}}onTransitionend(){cancelAnimationFrame(this.tickerAnim),this.isSpinning=!1,this.container.classList.remove(this.isSpinningClass),this.dispatchEvent(new CustomEvent("onEndSpin",{bubbles:!0,composed:!0}))}runTickerAnimation=()=>{var t=window.getComputedStyle(this.wheel).transform.split("(")[1].split(")")[0].split(","),e=t[0];let n=Math.atan2(t[1],e);n<0&&(n+=2*Math.PI);t=Math.round(n*(180/Math.PI)),e=Math.floor((t+this.stickerAngle)/this.prizeAngle);this.currentSlice!==e&&(this.ticker.style.animation="none",setTimeout(()=>this.ticker.style.animation=null,10),this.currentSlice=e),this.tickerAnim=requestAnimationFrame(this.runTickerAnimation.bind(this))}}customElements.define("spinx-wheel",SpinXWheel);class SpinXForm extends HTMLElement{data;constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.dispatchEvent(new CustomEvent("onLoadedForm",{bubbles:!0,composed:!0}))}render(){this.data=JSON.parse(this.dataset.json),this.shadowRoot.innerHTML=`
      <style>
        :host {
          font-family: ${this.data.fontFamily||"Arial"};
        }

        .title {
          color: ${this.data.titleColor};
        }

        .description {
          color: ${this.data.contentColor};
        }
      </style>

      <div class="container">
        <p class="title">${this.data.title}</p>
        <p class="description">${this.data.description}</p>
        <button id="spin-button">Spin</button>
      </div>

      <style>
        ${this.data.styleContent}
      </style>
    `,this.shadowRoot.getElementById("spin-button").addEventListener("click",()=>this.dispatchEvent(new CustomEvent("onSpin",{bubbles:!0,composed:!0})))}}customElements.define("spinx-form",SpinXForm);