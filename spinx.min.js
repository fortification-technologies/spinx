class SpinXAnnouncement extends HTMLElement{data;constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.dispatchEvent(new CustomEvent("onloaded",{bubbles:!0,composed:!0}))}render(){this.data=JSON.parse(this.dataset.json);var e=this.data.config,t=["Your announcement message here!"];let n="",i=(t.forEach(e=>{n+=`<p class="announcement-item">${e}</p>`}),"");t.forEach((e,t)=>{i+=`.spinx-announcement-container .announcement-item:nth-child(${t+1}) { animation-delay: ${3*t}s; } `}),this.shadowRoot.innerHTML=`
      <style>
        :host {
          position: sticky;
          bottom: 0;
          z-index: 1000;
        }

        .spinx-announcement-container {
          background-color: ${e.announcements?.backgroundColor.customized?e.announcements.backgroundColor.value:"#fdc73b"};
          color: ${e.announcements?.contentColor.customized?e.announcements.contentColor.value:"#121212"};
          font-family: Helvetica, 'Helvetica Neue', Arial, 'Lucida Grande', sans-serif;
          font-weight: 400;
          letter-spacing: 0.06rem;
          line-height: 1.8;
          text-align: center;
          width: 100%;
          font-size: 14px;
          display: none;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          overflow: hidden;
          position: relative;
        }

        .spinx-announcement-container .announcement-item {
          padding: 5px 0px;
          position: absolute;
          width: 100%;
          ${1<t.length?`opacity: 0; animation: slideUp ${3*t.length}s infinite;`:"opacity: 1; transform: translateY(0%);"}
        }

        ${i}

        @keyframes slideUp {
          0% {
            transform: translateY(100%);
            opacity: 0;
          }
          10% {
            transform: translateY(0%);
            opacity: 1;
          }
          45% {
            transform: translateY(0%);
            opacity: 1;
          }
          55% {
            transform: translateY(-100%);
            opacity: 0;
          }
          100% {
            transform: translateY(-100%);
            opacity: 0;
          }
        }
      </style>

      <div class="spinx-announcement-container" style="display: none">
        ${n}
      </div>
    `,this.announcementContainer=this.shadowRoot.querySelector(".spinx-announcement-container"),this.resetContainerHeight(),this.show()}show(){this.announcementContainer.style.display="flex","function"==typeof spinx?.customScripts?.onShowAnnouncement&&spinx.customScripts.onShowAnnouncement()}hide(){this.announcementContainer.style.display="none","function"==typeof spinx?.customScripts?.onShowAnnouncement&&spinx.customScripts.onHideAnnouncement()}resetContainerHeight(){setTimeout(()=>{var e=this.shadowRoot.querySelectorAll(".announcement-item");let t=0;e.forEach(e=>{e.offsetHeight>t&&(t=e.offsetHeight)}),this.announcementContainer.style.height=t+"px"},0)}}customElements.define("spinx-announcement",SpinXAnnouncement);class SpinXOpener extends HTMLElement{data;constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.dispatchEvent(new CustomEvent("onloaded",{bubbles:!0,composed:!0}))}render(){this.data=JSON.parse(this.dataset.json);var e=this.data.config;let t=e.triggers?.spinWheelOpener?.backgroundColor.customized?e.triggers.spinWheelOpener.backgroundColor.value:"#2097df";var n=e.triggers?.spinWheelOpener?.contentColor.customized?e.triggers.spinWheelOpener.contentColor.value:"#fff";this.shadowRoot.innerHTML=`
      <style>
        ${spinx?.customStyles??""}

        @keyframes rotateIn {
          0% {
            transform: rotate(0deg);
          }
          100% {
            opacity: 1;
            transform: rotate(2880deg);
          }
        }

        @keyframes borderDisplay {
          0% {
            border-color: transparent;
            // box-shadow: 0px transparent;
          }
          100% {
            border-color: ${t};
            // box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2);
          }
        }

        @keyframes contentDisplay {
          0% {
            transform: scaleX(0);
          }
          100% {
            transform: scaleX(1);
          }
        }

        .opener-button-container {
          position: fixed;
          z-index: 1001;
          bottom: ${e.triggers?.spinWheelOpener?.distance?.bottom?.customized?e.triggers.spinWheelOpener.distance.bottom.value:"60px"};
          ${"left"===e.triggers?.spinWheelOpener?.position?`left: ${e.triggers.spinWheelOpener.distance.left.customized?e.triggers.spinWheelOpener.distance.left.value:"25px"};`:`right: ${e.triggers.spinWheelOpener.distance.right.customized?e.triggers.spinWheelOpener.distance.right.value:"25px"};`}
          font-family: Helvetica, 'Helvetica Neue', Arial, 'Lucida Grande', sans-serif;
        }

        .opener-button-container[data-direction="right"] .opener-text {
          right: 70%;
        }
        .opener-button-container[data-direction="left"] .opener-text {
          left: 70%;
        }

        .opener-button {
          width: 52px;
          height: 52px;
          position: relative;
          z-index: 1003;
          border-radius: 50%;
          overflow: hidden;
          border: 2px solid transparent;
          background-color: #fff;
          cursor: pointer;
          // box-shadow: 0px 4px 8px transparent;
          transition: transform 0.1s ease, box-shadow 0.2s ease-out, border-color 1s ease-out;
          animation: rotateIn 1.2s forwards ease, borderDisplay 0.5s forwards ease-out 0.4s;
          opacity: 0;
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 0;
        }

        .opener-button img {
          width: 100%;
          height: 100%;
          object-fit: cover;
        }

        .opener-button:hover {
          box-shadow: 0px 6px 12px rgba(0, 0, 0, 0.4) !important;
          transform: scale(1.05) !important;
        }

        .opener-button:active {
          transform: scale(0.95) !important;
          box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        }

        .opener-text {
          position: absolute;
          z-index: 1002;
          bottom: 4px;
          ${"left"===e.triggers?.spinWheelOpener?.position?"border-radius: 0px 8px 8px 0px;":"border-radius: 8px 0px 0px 8px;"}
          line-height: 1;
          padding: 8px 0px;
          font-size: 16px;
          font-weight: 600;
          line-height: 1.8;
          letter-spacing: 0.06rem;
          text-transform: uppercase;
          color: ${n};
          background-color: ${t};
          box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
          white-space: nowrap;
          // opacity: 0;
          width: auto;
          transform: scaleX(0);
          transform-origin: ${e.triggers?.spinWheelOpener?.position};
          transition: 0.3s all ease;
          pointer-events: none;
        }

        .opener-text span {
            ${"left"===e.triggers?.spinWheelOpener?.position?"padding: 0px 20px 0px 24px;":"padding: 0px 24px 0px 20px;"}
        }

        @media only screen and (max-width: 600px) {
          .opener-text {
            display: none !important;
            animation: none;
          }
        }
      </style>

      <div class="opener-button-container" id="opener-button-container" data-direction="${e.triggers?.spinWheelOpener?.position}" style="display: none;">
        <div class="opener-text" id="opener-text"><span>${e.triggers?.spinWheelOpener?.content.customized?e.triggers.spinWheelOpener.content.value:"Spin Now"}</span></div>
        <button class="opener-button" id="opener-button">
          <img src="${spinx?.opener?.icon}" alt="${e.triggers?.spinWheelOpener?.content.customized?e.triggers.spinWheelOpener.content.value:"Spin Now"}" />
        </button>
      </div>
    `,this.openerContainer=this.shadowRoot.getElementById("opener-button-container"),this.openerButton=this.shadowRoot.getElementById("opener-button"),this.openerText=this.shadowRoot.getElementById("opener-text"),e.triggers?.spinWheelOpener?.attentionEffect.enabled?(this.openerButton.style.animation="rotateIn 2s forwards ease, borderDisplay 0.5s forwards ease-out 0.8s",this.openerText.style.animation="contentDisplay 0.8s forwards ease-out 1.2s",setInterval(()=>{this.openerButton.style.animation="none",this.openerButton.style.opacity=1,this.openerButton.style.borderColor=t,setTimeout(()=>this.openerButton.style.animation="rotateIn 2s forwards ease",100)},1e3*e.triggers?.spinWheelOpener?.attentionEffect.intervalTime)):(this.openerButton.style.opacity=1,this.openerButton.style.borderColor=t,this.openerText.style.transform="scaleX(1)"),this.openerButton.addEventListener("click",()=>this.click()),this.show()}show(){this.openerContainer.style.display="block","function"==typeof spinx?.customScripts?.onShowOpener&&spinx.customScripts.onShowOpener()}hide(){this.openerContainer.style.display="none","function"==typeof spinx?.customScripts?.onShowOpener&&spinx.customScripts.onHideOpener()}click(){var e=document.getElementsByTagName("spinx-popup")[0];e&&(e.isOpened?e.close():e.open())}}customElements.define("spinx-opener",SpinXOpener);class SpinXPopup extends HTMLElement{data;constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){this.render(),this.dispatchEvent(new CustomEvent("onloaded",{bubbles:!0,composed:!0}))}render(){this.data=JSON.parse(this.dataset.json),this.shadowRoot.innerHTML=`
      <style>
        .popup-overlay {
          position: fixed;
          top: 0;
          left: 0;
          width: 100vw;
          height: 100vh;
          background: #fff;
          box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
          overflow-y: auto;
          display: flex;
          justify-content: center;
          align-items: center;
          z-index: 1004;
          transform: translateX(-100%);
          transition: transform 0.3s ease;
        }

        // .popup-overlay.fullscreen {
        //   width: 100%;
        // }

        // .popup-overlay.halfscreen {
        //   width: 60%;
        // }

        .popup-overlay.fullscreen.active {
          transform: translateX(0);
        }

        .popup-overlay.active {
          transform: translateX(-33%);
        }

        .popup-content {
          background: #fff;
          width: 100%;
          height: 100%;
          // max-width: 600px;
          border-radius: 8px;
          display: flex;
          flex-direction: column;
          align-items: center;
          position: relative;
          text-align: center;
        }

        .close-button {
          position: absolute;
          top: 10px;
          right: 10px;
          padding: 5px 15px;
          font-size: 32px;
          font-weight: bold;
          background: none;
          border: none;
          cursor: pointer;
          transition: transform 0.3s ease;
        }

        .close-button:hover {
          transform: rotate(90deg);
        }

        .popup-body {
          display: flex;
          flex-direction: row;
          width: 100%;
          height: 100%;
          // gap: 20px;
          align-items: center;
          justify-content: center;
          text-align: center;
        }

        .space-column {
          flex: 0.5;
        }

        .popup-overlay.fullscreen .space-column {
          display: none;
        }

        .spin-column {
          flex: 1;
          padding: 0px;
          width: 100%;
        }

        .popup-overlay.fullscreen .spin-column {
          padding: 120px;
        }

        .info-column {
          flex: 1;
          padding: 20px 80px 20px 40px;
        }

        @media (max-width: 1024px) and (orientation: portrait) {
          .popup-body {
            flex-direction: column;
            padding-top: 60px;
          }

          .popup-overlay.active {
            transform: translateX(0);
          }

          .space-column {
            display: none;
          }

          .spin-column {
            width: 60%;
          }
        }

        @media (max-width: 430px) and (orientation: portrait) {
          .popup-body {
            padding-top: 20px;
          }

          .spin-column {
            width: 90%;
          }
        }

        @media (max-width: 375px) and (orientation: portrait) {
          .popup-body {
            padding-top: 40px;
          }
        }

        @media (max-width: 1366px) and (orientation: landscape) {
          .spin-column {
            flex: 1.5;
          }
        }

        @media (max-width: 1024px) and (orientation: landscape) {
          .spin-column {
            flex: 1.8;
            padding: 0px;
          }
        }

        @media (max-width: 932px) and (orientation: landscape) {
          .spin-column {
            padding: 60px;
          }
        }

        @media (max-width: 740px) and (orientation: landscape) {
          .spin-column {
            padding: 20px;
          }
        }

        @media (max-width: 667px) and (orientation: landscape) {
          .spin-column {
            padding: 0px;
          }
        }
      </style>

      <div class="popup-overlay" id="popup-overlay">
        <div class="popup-content">
          <button class="close-button">&times;</button>
          <div class="popup-body">
            <div class="space-column"></div>
            <div class="spin-column"></div>
            <div class="info-column">
              Content Column 2
              <button id="spin-button">Quay</button>
            </div>
          </div>
        </div>
      </div>
    `;let e=document.createElement("spinx-wheel"),t=(e.dataset.json=JSON.stringify(this.data),this.shadowRoot.querySelector(".spin-column").append(e),Math.floor(10*Math.random()));this.shadowRoot.getElementById("spin-button").addEventListener("click",()=>e.spin(t)),this.shadowRoot.querySelector(".close-button").addEventListener("click",()=>this.close())}get isOpened(){return this.shadowRoot.getElementById("popup-overlay").classList.contains("active")}open(e=this.data?.config.usePopupFullScreen){var t=this.shadowRoot.getElementById("popup-overlay");t.classList.remove("fullscreen","halfscreen"),t.classList.add(e?"fullscreen":"halfscreen"),t.classList.add("active")}close(){this.shadowRoot.getElementById("popup-overlay").classList.remove("active")}}customElements.define("spinx-popup",SpinXPopup);class SpinXWheel extends HTMLElement{data;constructor(){super(),this.attachShadow({mode:"open"}),this.width=this.getAttribute("width")||800,this.height=this.getAttribute("height")||800,this.prizes=["$100","$1","$5","$10","ZERO","$50","$2","JACKPOT","$20","$5.5","$2.5","$3"],this.prizeAngle=360/this.prizes.length,this.angleOffset=0,this.isSpinning=!1,this.isSpinningClass="is-spinning",this.tickerAnim,this.currentSlice=0}connectedCallback(){this.render(),this.dispatchEvent(new CustomEvent("onloaded",{bubbles:!0,composed:!0}))}render(){this.data=JSON.parse(this.dataset.json),this.shadowRoot.innerHTML=`
      <style>
        :host {
          display: flex;
          align-items: center;
          justify-content: center;
          width: 100%;
          height: 100%;
        }

        #container {
          width: 100%;
          aspect-ratio: 1 / 1;
          position: relative;
        }

        canvas {
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
        }

        .ticker {
          position: absolute;
          width: 8%; /* Tăng chiều rộng của mũi tên */
          // height: auto;
          // top: 55px;
          // right: 37px;
          top: 10.2%;
          right: 6.4%;
          transform: translate(0, 0) rotate(45deg); /* Xoay mũi tên để trỏ vào vòng quay */
          transform-origin: 50% 0%; /* Đặt gốc xoay của mũi tên */
          pointer-events: none;
        }

        .ticker-svg {
          fill: black; /* Màu nền mũi tên */
          stroke: yellow; /* Màu viền mũi tên */
          stroke-width: 2;
        }

        .${this.isSpinningClass} .ticker {
          animation: tick 0.7s cubic-bezier(0.34, 1.56, 0.64, 1);
        }

        @keyframes tick {
          40% {
            transform: translate(0, 0) rotate(30deg);
          }
        }

        @media only screen and (max-width: 600px) {
          #container {
            width: 85%;
          }

          .ticker {
            width: 10%; /* Tăng chiều rộng của mũi tên */
            top: 9.5%;
            right: 4.2%;
          }
        }
      </style>

      <div id="container"></div>
    `,this.container=this.shadowRoot.getElementById("container"),this.wheel=document.createElement("canvas"),this.wheel.classList.add("wheel"),this.wheel.width=this.width,this.wheel.height=this.height,this.renderWheelCanvas(),this.circle=document.createElement("canvas"),this.circle.classList.add("circle"),this.circle.width=this.width,this.circle.height=this.height,this.renderCircleCanvas(),this.ticker=document.createElement("div"),this.ticker.classList.add("ticker"),this.ticker.innerHTML=`
      <svg viewBox="0 0 300 300" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path fill-rule="evenodd" clip-rule="evenodd" d="M249.021 176.878L248.941 177.077C243.469 190.758 230.702 220.22 214.067 246.427C205.764 259.507 196.231 272.207 185.848 281.748C175.629 291.137 163.336 298.611 149.656 298.611C136.1 298.611 123.888 291.483 113.663 282.329C103.308 273.057 93.8229 260.673 85.5485 247.79C68.9756 221.986 56.1877 192.478 50.3017 176.897C16.8118 88.2474 69.3156 1.00049 149.656 1.00049C188.662 1.00049 222.904 19.2152 242.61 50.959C262.299 82.6746 266.69 126.54 249.092 176.675L249.021 176.878ZM149.656 288.611C109.656 288.611 71.1394 203.759 59.6564 173.363C27.9749 89.5005 78.0846 11.0005 149.656 11.0005C221.228 11.0005 273.306 77.5005 239.656 173.363C228.903 200.246 189.656 288.611 149.656 288.611Z" fill="#77003C"/>
        <path d="M59.6561 173.363C71.1391 203.759 109.656 288.611 149.656 288.611C189.656 288.611 228.903 200.246 239.656 173.363C273.305 77.5005 221.228 11.0005 149.656 11.0005C78.0843 11.0005 27.9747 89.5005 59.6561 173.363Z" fill="#FE3198"/>
        <path d="M59.6561 173.363C71.1391 203.759 109.656 288.611 149.656 288.611C189.656 288.611 228.903 200.246 239.656 173.363C273.305 77.5005 221.228 11.0005 149.656 11.0005C78.0843 11.0005 27.9747 89.5005 59.6561 173.363Z" fill="url(#paint0_linear_1905_570)" fill-opacity="0.2"/>
        <defs>
          <linearGradient id="paint0_linear_1905_570" x1="150.045" y1="11.0005" x2="150.045" y2="288.611" gradientUnits="userSpaceOnUse">
            <stop offset="0.349094" stop-color="#FFE9F4"/>
            <stop offset="0.696231" stop-color="#030001"/>
          </linearGradient>
        </defs>
      </svg>
    `,this.container.append(this.wheel,this.circle,this.ticker)}darkenHex(e,t){e=parseInt(e.slice(1),16);return"#"+(Math.max(0,(e>>16)-t)<<16|Math.max(0,(e>>8&255)-t)<<8|Math.max(0,(255&e)-t)).toString(16).padStart(6,"0")}renderWheelCanvas(){let i=this.wheel.getContext("2d"),o=this.width/2,s=2*Math.PI/this.prizes.length;i.clearRect(0,0,this.width,this.height),i.beginPath(),i.arc(o,o,o-10,0,2*Math.PI),i.lineWidth=10,i.strokeStyle="#FFA500",i.stroke(),this.prizes.forEach((e,t)=>{var n=t%2==0?"#ff9800":"#673ab7";i.beginPath(),i.moveTo(o,o),i.arc(o,o,o-13,s*t+this.angleOffset,s*(t+1)+this.angleOffset),i.closePath(),i.fillStyle=n,i.fill(),i.strokeStyle="#ffffff",i.lineWidth=2,i.stroke(),i.save(),i.translate(o,o),i.rotate(s*t+s/2+this.angleOffset),i.textAlign="center",i.fillStyle="#ffffff",i.font="bold 32px Arial",i.fillText(e,o/1.4,10),i.restore()}),this.wheel.style.transform="rotate(0deg)",this.wheel.style.transition="transform 15s cubic-bezier(0.20, 0.1, 0.20, 1)",this.wheel.addEventListener("transitionend",this.onTransitionend.bind(this))}renderCircleCanvas(){var e=this.circle.getContext("2d"),t=this.width/2;e.clearRect(0,0,this.width,this.height),e.beginPath(),e.arc(t,t,t/6,0,2*Math.PI),e.fillStyle="#FFD700",e.fill(),e.lineWidth=5,e.strokeStyle="#FFA500",e.stroke()}spin(t){if(!this.isSpinning){this.isSpinning=!0,this.container.classList.add(this.isSpinningClass),this.ticker.style.animation="none",this.runTickerAnimation();var n=t*this.prizeAngle,t=(t+1)*this.prizeAngle;let e=Math.round(Math.random()*(t-n)+n);0!==e&&e%this.prizeAngle!=0||e--;t=3600-e-45;this.wheel.style.transform=`rotate(${t}deg)`}}onTransitionend(){cancelAnimationFrame(this.tickerAnim),this.isSpinning=!1,this.container.classList.remove(this.isSpinningClass)}runTickerAnimation=()=>{var e=window.getComputedStyle(this.wheel).transform.split("(")[1].split(")")[0].split(","),t=e[0];let n=Math.atan2(e[1],t);n<0&&(n+=2*Math.PI);e=Math.round(n*(180/Math.PI)),t=Math.floor((e+45)/this.prizeAngle);this.currentSlice!==t&&(this.ticker.style.animation="none",setTimeout(()=>this.ticker.style.animation=null,10),this.currentSlice=t),this.tickerAnim=requestAnimationFrame(this.runTickerAnimation.bind(this))}}customElements.define("spinx-wheel",SpinXWheel);